import { ObjectString } from "./src/components/Table/types";

export enum NameEnum {
  STRING = "string",
  DOUBLE = "double",
  BOOLEAN = "boolean",
  TEXT = "text",
  REFERENCE = "reference",
  MULTIPICKLIST = "multipicklist",
  PICKLIST = "picklist",
  AUTOGENERATED = "autogenerated",
  OWNER = "owner",
  DATETIME = "datetime",
  DATE = "date",
  CURRENCY = "currency",
}

export enum UItypeEnum {
  SIXTEEN = "16",
  FOUR = "4",
  FIFTYSIX = "56",
  TEN = "10",
  ONE = "1",
  SEVENTY = "70",
  FIVE = "5",
  FIFTYTWO = "52",
  FIFTYFOUR = "54",
  THIRTYTHREE = "33",
  FIFTEEN = "15",
  SEVENTYONE = "71",
  NINETEEN = "19",
  SIXTYNINE = "69",
  FIFTYTHREE = "53",
}

export type PicklistValues = {
  label: string;
  value: string;
};

export type PicklistValuesGroups = {
  users: { [key: string]: string };
  groups: { [key: string]: string };
};

export type UIDataType = {
  refersTo?: string[];
  format?: string;
  defaultValue?: string | null;
  name: NameEnum;
  picklistValues?: PicklistValues[] & PicklistValuesGroups;
};

export type FieldsGroupingValue = {
  value: string;
  label: string;
};

export type FieldsGrouping = {
  label: string;
  name: string;
  type: { defaultValue?: FieldsGroupingValue[] } & {
    picklistValues?: FieldsGroupingValue[];
  };
  mandatory?: boolean;
  uitype: UItypeEnum;
  value: string & FieldsGroupingValue;
};

export type UIData = {
  default: string;
  editable: boolean;
  headerField: null;
  isunique: boolean;
  label: string;
  mandatory: boolean;
  name: string;
  nullable: boolean;
  quickcreate: string;
  summaryfield: number;
  type: UIDataType & string;
};

export type UIDataGrouping = {
  label: string;
  fields: (UIData & FieldsGrouping)[];
};

export type ItemsData = {
  headers: ObjectString[];
  moreRecords: boolean;
  nameFields: string[];
  orderBy: boolean;
  page: string;
  records: ObjectString[];
  selectedFilter: string;
  sortOrder: boolean;
};

export type InputValue = {
  [key: string]: string | boolean | string[];
};
